import chalk from "chalk";
import { format, createLogger, transports } from "winston";
import { hasColor } from "./helpers.js";
export const errorSymbol = "ⓘ";
export const warningSymbol = "⚠";
const logLevelFormatter = {
    error: (msg) => chalk.redBright(`${errorSymbol} ${msg}`),
    warn: (msg) => chalk.yellowBright(`${warningSymbol} ${msg}`),
    info: chalk.magentaBright,
    debug: chalk.gray,
};
const styleLogs = format.printf((info) => {
    if (hasColor(info.message) || info.noFormat) {
        return info.message;
    }
    const colorize = logLevelFormatter[info.level];
    return colorize ? colorize(info.message) : info.message;
});
const logger = createLogger({
    level: process.env.NODE_ENV === "development" ? "debug" : "info",
    format: format.combine(styleLogs),
    transports: [new transports.Console()],
});
export default logger;
//# sourceMappingURL=logger.js.map