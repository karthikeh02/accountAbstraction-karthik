import { Module } from "zksync-cli/lib";
import type { ConfigHandler } from "zksync-cli/lib";
type ModuleConfig = {
    version?: string;
    rpcPortUsed?: string;
};
export default class SetupModule extends Module<ModuleConfig> {
    private readonly localFolder;
    constructor(config: ConfigHandler);
    getLocalFilePath(fileName: string): string;
    getInstalledModuleFilePath(fileName: string): string;
    get installedComposeFile(): string;
    get startAfterNode(): boolean;
    isInstalled(): Promise<boolean>;
    applyAppConfig(): Promise<void>;
    install(): Promise<void>;
    getStartupInfo(): (string | {
        text: string;
        list: string[];
    })[];
    get version(): string | undefined;
    getLatestVersion(): Promise<string>;
    cleanupIndexedData(): Promise<void>;
    getNodeLatestBlockNumber(): Promise<number>;
    getApiLatestBlockNumber(): Promise<number>;
    /**
     * @summary Waits for full indexing of the L2 node
     * @description Gets latest block number from the L2 node and Block Explorer API and compares them.
     **/
    waitForFullIndexing(): Promise<void>;
    start(): Promise<void>;
    update(): Promise<void>;
    stop(): Promise<void>;
    clean(): Promise<void>;
    isRunning(): Promise<boolean>;
    getLogs(): Promise<string[]>;
}
export {};
